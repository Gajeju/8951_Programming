#include <AT89x51.h>

unsigned char index[3] = {0,0,0};


unsigned long time[4] = {0, 1, 2, 3};	//시간값 저장
unsigned long temp[4];			//다음 LED를 찾기위한 임시 저장장소

void delay(unsigned int ms)
{
    unsigned int i, j;
    for (i = 0; i <= ms; i++)
	for (j = 0; j <= 125; j++);
}

unsigned char pow(unsigned char a)	//2^a 반환
{
    unsigned char i;
    unsigned char result = 1;

    for (i = 0; i < a; i++)
    {
        result *= 2;
    }
    return result;
}

void choose(void)			//LED 우선순위 정의
{

    unsigned long m;
    unsigned char i,j;

    //배열 복사
    for (i = 0; i < 4; i++)
    {
    temp[i] = time[i];
    }

    //오름차순 정렬
    for (i = 0; i < 4; i++)
    {
    for (j = 0; j < 3; j++ )
    if (temp[j] >= temp[j+1])
    {
    m = temp[j+1];
    temp[j+1] = temp[j];
    temp[j] = m;
    }
    }

    //index값 설정
    for (i = 0; i < 4; i++)
    {
    if (time[i] == temp[0]) index[0] = i;
    if (time[i] == temp[1]) index[1] = i;
    if (time[i] == temp[2]) index[2] = i;
    }
}

void time_reset(void)		//time 배열 reset
{
    unsigned int i;
    if (P0_0 == 0)
    {
       for (i = 0; i < 4; i++)
       {
           time[i] = i;
       }
    }
}


void main(void)
{
    unsigned char sw = 0;

    while(1)
    {
        P1 = 0xff;
        sw = P1;


      //스위치에 따른 출력
      if (sw == 0xfe)
      {
        P2 = 0xff & (~pow(index[0]));
        time[index[0]] += 1;
        delay(10);
      }
      else if (sw == 0xfd)
      {
        P2 = 0xff & (~pow(index[0])) & (~pow(index[1]));
        time[index[0]] += 1;
        time[index[1]] += 1;
        delay(10);
      }
      else if (sw == 0xfb)
      {
        P2 = 0xff & (~pow(index[0])) & (~pow(index[1])) & (~pow(index[2]));
        time[index[0]] += 1;
        time[index[1]] += 1;
        time[index[2]] += 1;
        delay(10);
      }
      else if (sw == 0xf7)
      {
        P2 = 0xf0;
        delay(10);
      }
      else choose();

        P2 = 0xff;
        time_reset();

      }
}
